/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package tutorial;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum WorkerOpType implements org.apache.thrift.TEnum {
  ReadHdfsSplit(1),
  GetSplit(2),
  DelSplit(3),
  MapJob(4),
  FlatMapJob(5),
  FilterJob(6),
  ReduceJob(7),
  ReduceByKeyJob(8),
  CountJob(9),
  MapPairJob(10),
  GetPairSplit(11),
  HashSplit(12),
  CountPairJob(13),
  FilterPairJob(14),
  ParaJob(15);

  private final int value;

  private WorkerOpType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static WorkerOpType findByValue(int value) { 
    switch (value) {
      case 1:
        return ReadHdfsSplit;
      case 2:
        return GetSplit;
      case 3:
        return DelSplit;
      case 4:
        return MapJob;
      case 5:
        return FlatMapJob;
      case 6:
        return FilterJob;
      case 7:
        return ReduceJob;
      case 8:
        return ReduceByKeyJob;
      case 9:
        return CountJob;
      case 10:
        return MapPairJob;
      case 11:
        return GetPairSplit;
      case 12:
        return HashSplit;
      case 13:
        return CountPairJob;
      case 14:
        return FilterPairJob;
      case 15:
        return ParaJob;
      default:
        return null;
    }
  }
}
